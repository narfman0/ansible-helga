---
- name: Update apt (debian)
  when: ansible_os_family == 'Debian'
  apt: update_cache=yes
  become: True

- name: Install packages (debian)
  when: ansible_os_family == 'Debian'
  package: name={{ item }} state=latest
  with_items:
    - python-dev
    - python-pip
    - libffi-dev
    - openssl
    - libssl-dev
    - supervisor
    - mongodb
  become: True

- name: Install packages (rhel)
  when: ansible_os_family != 'Debian'
  package: name={{ item }} state=latest
  with_items:
    - python-devel
    - libffi-devel
    - openssl
    - openssl-devel
    - supervisor
  become: True

- name: Create helga user
  user: name=helga comment="Helga"

- name: Create helga directory
  file: path={{ helga_path }} state=directory mode=0755

- name: Generate settings file
  template: src=settings.py.j2
            dest={{ helga_path }}settings.py
            owner=helga
            group=helga
            mode=640
  when: helga_settings_file == None

- name: Copy settings file
  template: src={{ helga_settings_file }}
            dest={{ helga_path }}settings.py
            owner=helga
            group=helga
            mode=640
  when: helga_settings_file != None

- name: Copy requirements.txt
  template: src=requirements.txt.j2
            dest={{ helga_path }}requirements.txt
            owner=helga
            group=helga
            mode=640

- name: pip install requirements.txt
  pip: requirements={{ helga_path }}requirements.txt
  become: True
  register: requirements_install

- name: Generate supervisord file (debian)
  when: ansible_os_family == 'Debian'
  template: src=helga.conf.j2
          dest=/etc/supervisor/conf.d/helga.conf
          owner=root
          group=root
          mode=640

- name: Generate supervisord file (rhel)
  when: ansible_os_family != 'Debian'
  template: src=helga.conf.j2
          dest=/etc/supervisord.d/helga.conf
          owner=root
          group=root
          mode=640

- supervisorctl:
    name: helga
    state: started
  become: True
